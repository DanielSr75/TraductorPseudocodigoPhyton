Created by PLY version 3.6 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> root
Rule 1     root -> inicio
Rule 2     inicio -> instruccion inicio
Rule 3     inicio -> empty
Rule 4     empty -> <empty>
Rule 5     fininstru -> FIN
Rule 6     inmediato -> NUM
Rule 7     inmediato -> ID
Rule 8     inmediato -> EXPBOOL
Rule 9     operacion -> operacion1
Rule 10    operacion1 -> operacion OPBIN operacion
Rule 11    operacion1 -> PARENA operacion PARENC
Rule 12    operacion1 -> inmediato
Rule 13    opestring -> STRING
Rule 14    opestring -> operacion
Rule 15    parametro -> operacion COMA parametro
Rule 16    parametro -> operacion
Rule 17    parametros -> parametro
Rule 18    parametros -> empty
Rule 19    imprime -> PRINT PARENA opestring PARENC
Rule 20    comentario -> COMENT STRING
Rule 21    return -> RETURN opestring
Rule 22    procedimiento -> PROC ID PARENA parametros PARENC
Rule 23    asignacion -> VAR ID ASIG opestring
Rule 24    asignacion -> ID ASIG opestring
Rule 25    asignacion -> ID ASIG ID PARENA parametros PARENC
Rule 26    condicionif -> IF operacion
Rule 27    condicionelse -> ELSE
Rule 28    condicion -> condicionif
Rule 29    condicion -> condicionelse
Rule 30    ciclowhile -> WHILE PARENA operacion PARENC ENTONCES
Rule 31    ciclofor -> FOR ID IN ID
Rule 32    opeunaria -> OPUNA ID
Rule 33    preguntar -> VAR ID ASIG ASK PARENA STRING PARENC
Rule 34    preguntar -> ID ASIG ASK PARENA STRING PARENC
Rule 35    llamado -> ID PARENA parametros PARENC
Rule 36    instruccion -> procedimiento
Rule 37    instruccion -> asignacion
Rule 38    instruccion -> condicion
Rule 39    instruccion -> ciclowhile
Rule 40    instruccion -> ciclofor
Rule 41    instruccion -> opeunaria
Rule 42    instruccion -> return
Rule 43    instruccion -> comentario
Rule 44    instruccion -> imprime
Rule 45    instruccion -> preguntar
Rule 46    instruccion -> fininstru
Rule 47    instruccion -> llamado

Terminals, with rules where they appear

ASIG                 : 23 24 25 33 34
ASK                  : 33 34
COMA                 : 15
COMENT               : 20
ELSE                 : 27
ENTONCES             : 30
EXPBOOL              : 8
FIN                  : 5
FOR                  : 31
ID                   : 7 22 23 24 25 25 31 31 32 33 34 35
IF                   : 26
IN                   : 31
NUM                  : 6
OPBIN                : 10
OPUNA                : 32
PARENA               : 11 19 22 25 30 33 34 35
PARENC               : 11 19 22 25 30 33 34 35
PRINT                : 19
PROC                 : 22
RETURN               : 21
STRING               : 13 20 33 34
VAR                  : 23 33
WHILE                : 30
error                : 

Nonterminals, with rules where they appear

asignacion           : 37
ciclofor             : 40
ciclowhile           : 39
comentario           : 43
condicion            : 38
condicionelse        : 29
condicionif          : 28
empty                : 3 18
fininstru            : 46
imprime              : 44
inicio               : 1 2
inmediato            : 12
instruccion          : 2
llamado              : 47
operacion            : 10 10 11 14 15 16 26 30
operacion1           : 9
opestring            : 19 21 23 24
opeunaria            : 41
parametro            : 15 17
parametros           : 22 25 35
preguntar            : 45
procedimiento        : 36
return               : 42
root                 : 0

Parsing method: LALR

state 0

    (0) S' -> . root
    (1) root -> . inicio
    (2) inicio -> . instruccion inicio
    (3) inicio -> . empty
    (36) instruccion -> . procedimiento
    (37) instruccion -> . asignacion
    (38) instruccion -> . condicion
    (39) instruccion -> . ciclowhile
    (40) instruccion -> . ciclofor
    (41) instruccion -> . opeunaria
    (42) instruccion -> . return
    (43) instruccion -> . comentario
    (44) instruccion -> . imprime
    (45) instruccion -> . preguntar
    (46) instruccion -> . fininstru
    (47) instruccion -> . llamado
    (4) empty -> .
    (22) procedimiento -> . PROC ID PARENA parametros PARENC
    (23) asignacion -> . VAR ID ASIG opestring
    (24) asignacion -> . ID ASIG opestring
    (25) asignacion -> . ID ASIG ID PARENA parametros PARENC
    (28) condicion -> . condicionif
    (29) condicion -> . condicionelse
    (30) ciclowhile -> . WHILE PARENA operacion PARENC ENTONCES
    (31) ciclofor -> . FOR ID IN ID
    (32) opeunaria -> . OPUNA ID
    (21) return -> . RETURN opestring
    (20) comentario -> . COMENT STRING
    (19) imprime -> . PRINT PARENA opestring PARENC
    (33) preguntar -> . VAR ID ASIG ASK PARENA STRING PARENC
    (34) preguntar -> . ID ASIG ASK PARENA STRING PARENC
    (5) fininstru -> . FIN
    (35) llamado -> . ID PARENA parametros PARENC
    (26) condicionif -> . IF operacion
    (27) condicionelse -> . ELSE

    $end            reduce using rule 4 (empty -> .)
    PROC            shift and go to state 30
    VAR             shift and go to state 20
    ID              shift and go to state 22
    WHILE           shift and go to state 28
    FOR             shift and go to state 17
    OPUNA           shift and go to state 10
    RETURN          shift and go to state 2
    COMENT          shift and go to state 1
    PRINT           shift and go to state 5
    FIN             shift and go to state 21
    IF              shift and go to state 23
    ELSE            shift and go to state 19

    opeunaria                      shift and go to state 24
    return                         shift and go to state 16
    asignacion                     shift and go to state 25
    preguntar                      shift and go to state 8
    instruccion                    shift and go to state 27
    ciclofor                       shift and go to state 18
    comentario                     shift and go to state 7
    condicion                      shift and go to state 11
    condicionelse                  shift and go to state 3
    procedimiento                  shift and go to state 4
    inicio                         shift and go to state 13
    condicionif                    shift and go to state 29
    imprime                        shift and go to state 6
    llamado                        shift and go to state 15
    root                           shift and go to state 26
    ciclowhile                     shift and go to state 9
    empty                          shift and go to state 14
    fininstru                      shift and go to state 12

state 1

    (20) comentario -> COMENT . STRING

    STRING          shift and go to state 31


state 2

    (21) return -> RETURN . opestring
    (13) opestring -> . STRING
    (14) opestring -> . operacion
    (9) operacion -> . operacion1
    (10) operacion1 -> . operacion OPBIN operacion
    (11) operacion1 -> . PARENA operacion PARENC
    (12) operacion1 -> . inmediato
    (6) inmediato -> . NUM
    (7) inmediato -> . ID
    (8) inmediato -> . EXPBOOL

    STRING          shift and go to state 33
    PARENA          shift and go to state 37
    NUM             shift and go to state 35
    ID              shift and go to state 39
    EXPBOOL         shift and go to state 40

    operacion1                     shift and go to state 36
    inmediato                      shift and go to state 38
    opestring                      shift and go to state 32
    operacion                      shift and go to state 34

state 3

    (29) condicion -> condicionelse .

    PROC            reduce using rule 29 (condicion -> condicionelse .)
    VAR             reduce using rule 29 (condicion -> condicionelse .)
    ID              reduce using rule 29 (condicion -> condicionelse .)
    WHILE           reduce using rule 29 (condicion -> condicionelse .)
    FOR             reduce using rule 29 (condicion -> condicionelse .)
    OPUNA           reduce using rule 29 (condicion -> condicionelse .)
    RETURN          reduce using rule 29 (condicion -> condicionelse .)
    COMENT          reduce using rule 29 (condicion -> condicionelse .)
    PRINT           reduce using rule 29 (condicion -> condicionelse .)
    FIN             reduce using rule 29 (condicion -> condicionelse .)
    IF              reduce using rule 29 (condicion -> condicionelse .)
    ELSE            reduce using rule 29 (condicion -> condicionelse .)
    $end            reduce using rule 29 (condicion -> condicionelse .)


state 4

    (36) instruccion -> procedimiento .

    PROC            reduce using rule 36 (instruccion -> procedimiento .)
    VAR             reduce using rule 36 (instruccion -> procedimiento .)
    ID              reduce using rule 36 (instruccion -> procedimiento .)
    WHILE           reduce using rule 36 (instruccion -> procedimiento .)
    FOR             reduce using rule 36 (instruccion -> procedimiento .)
    OPUNA           reduce using rule 36 (instruccion -> procedimiento .)
    RETURN          reduce using rule 36 (instruccion -> procedimiento .)
    COMENT          reduce using rule 36 (instruccion -> procedimiento .)
    PRINT           reduce using rule 36 (instruccion -> procedimiento .)
    FIN             reduce using rule 36 (instruccion -> procedimiento .)
    IF              reduce using rule 36 (instruccion -> procedimiento .)
    ELSE            reduce using rule 36 (instruccion -> procedimiento .)
    $end            reduce using rule 36 (instruccion -> procedimiento .)


state 5

    (19) imprime -> PRINT . PARENA opestring PARENC

    PARENA          shift and go to state 41


state 6

    (44) instruccion -> imprime .

    PROC            reduce using rule 44 (instruccion -> imprime .)
    VAR             reduce using rule 44 (instruccion -> imprime .)
    ID              reduce using rule 44 (instruccion -> imprime .)
    WHILE           reduce using rule 44 (instruccion -> imprime .)
    FOR             reduce using rule 44 (instruccion -> imprime .)
    OPUNA           reduce using rule 44 (instruccion -> imprime .)
    RETURN          reduce using rule 44 (instruccion -> imprime .)
    COMENT          reduce using rule 44 (instruccion -> imprime .)
    PRINT           reduce using rule 44 (instruccion -> imprime .)
    FIN             reduce using rule 44 (instruccion -> imprime .)
    IF              reduce using rule 44 (instruccion -> imprime .)
    ELSE            reduce using rule 44 (instruccion -> imprime .)
    $end            reduce using rule 44 (instruccion -> imprime .)


state 7

    (43) instruccion -> comentario .

    PROC            reduce using rule 43 (instruccion -> comentario .)
    VAR             reduce using rule 43 (instruccion -> comentario .)
    ID              reduce using rule 43 (instruccion -> comentario .)
    WHILE           reduce using rule 43 (instruccion -> comentario .)
    FOR             reduce using rule 43 (instruccion -> comentario .)
    OPUNA           reduce using rule 43 (instruccion -> comentario .)
    RETURN          reduce using rule 43 (instruccion -> comentario .)
    COMENT          reduce using rule 43 (instruccion -> comentario .)
    PRINT           reduce using rule 43 (instruccion -> comentario .)
    FIN             reduce using rule 43 (instruccion -> comentario .)
    IF              reduce using rule 43 (instruccion -> comentario .)
    ELSE            reduce using rule 43 (instruccion -> comentario .)
    $end            reduce using rule 43 (instruccion -> comentario .)


state 8

    (45) instruccion -> preguntar .

    PROC            reduce using rule 45 (instruccion -> preguntar .)
    VAR             reduce using rule 45 (instruccion -> preguntar .)
    ID              reduce using rule 45 (instruccion -> preguntar .)
    WHILE           reduce using rule 45 (instruccion -> preguntar .)
    FOR             reduce using rule 45 (instruccion -> preguntar .)
    OPUNA           reduce using rule 45 (instruccion -> preguntar .)
    RETURN          reduce using rule 45 (instruccion -> preguntar .)
    COMENT          reduce using rule 45 (instruccion -> preguntar .)
    PRINT           reduce using rule 45 (instruccion -> preguntar .)
    FIN             reduce using rule 45 (instruccion -> preguntar .)
    IF              reduce using rule 45 (instruccion -> preguntar .)
    ELSE            reduce using rule 45 (instruccion -> preguntar .)
    $end            reduce using rule 45 (instruccion -> preguntar .)


state 9

    (39) instruccion -> ciclowhile .

    PROC            reduce using rule 39 (instruccion -> ciclowhile .)
    VAR             reduce using rule 39 (instruccion -> ciclowhile .)
    ID              reduce using rule 39 (instruccion -> ciclowhile .)
    WHILE           reduce using rule 39 (instruccion -> ciclowhile .)
    FOR             reduce using rule 39 (instruccion -> ciclowhile .)
    OPUNA           reduce using rule 39 (instruccion -> ciclowhile .)
    RETURN          reduce using rule 39 (instruccion -> ciclowhile .)
    COMENT          reduce using rule 39 (instruccion -> ciclowhile .)
    PRINT           reduce using rule 39 (instruccion -> ciclowhile .)
    FIN             reduce using rule 39 (instruccion -> ciclowhile .)
    IF              reduce using rule 39 (instruccion -> ciclowhile .)
    ELSE            reduce using rule 39 (instruccion -> ciclowhile .)
    $end            reduce using rule 39 (instruccion -> ciclowhile .)


state 10

    (32) opeunaria -> OPUNA . ID

    ID              shift and go to state 42


state 11

    (38) instruccion -> condicion .

    PROC            reduce using rule 38 (instruccion -> condicion .)
    VAR             reduce using rule 38 (instruccion -> condicion .)
    ID              reduce using rule 38 (instruccion -> condicion .)
    WHILE           reduce using rule 38 (instruccion -> condicion .)
    FOR             reduce using rule 38 (instruccion -> condicion .)
    OPUNA           reduce using rule 38 (instruccion -> condicion .)
    RETURN          reduce using rule 38 (instruccion -> condicion .)
    COMENT          reduce using rule 38 (instruccion -> condicion .)
    PRINT           reduce using rule 38 (instruccion -> condicion .)
    FIN             reduce using rule 38 (instruccion -> condicion .)
    IF              reduce using rule 38 (instruccion -> condicion .)
    ELSE            reduce using rule 38 (instruccion -> condicion .)
    $end            reduce using rule 38 (instruccion -> condicion .)


state 12

    (46) instruccion -> fininstru .

    PROC            reduce using rule 46 (instruccion -> fininstru .)
    VAR             reduce using rule 46 (instruccion -> fininstru .)
    ID              reduce using rule 46 (instruccion -> fininstru .)
    WHILE           reduce using rule 46 (instruccion -> fininstru .)
    FOR             reduce using rule 46 (instruccion -> fininstru .)
    OPUNA           reduce using rule 46 (instruccion -> fininstru .)
    RETURN          reduce using rule 46 (instruccion -> fininstru .)
    COMENT          reduce using rule 46 (instruccion -> fininstru .)
    PRINT           reduce using rule 46 (instruccion -> fininstru .)
    FIN             reduce using rule 46 (instruccion -> fininstru .)
    IF              reduce using rule 46 (instruccion -> fininstru .)
    ELSE            reduce using rule 46 (instruccion -> fininstru .)
    $end            reduce using rule 46 (instruccion -> fininstru .)


state 13

    (1) root -> inicio .

    $end            reduce using rule 1 (root -> inicio .)


state 14

    (3) inicio -> empty .

    $end            reduce using rule 3 (inicio -> empty .)


state 15

    (47) instruccion -> llamado .

    PROC            reduce using rule 47 (instruccion -> llamado .)
    VAR             reduce using rule 47 (instruccion -> llamado .)
    ID              reduce using rule 47 (instruccion -> llamado .)
    WHILE           reduce using rule 47 (instruccion -> llamado .)
    FOR             reduce using rule 47 (instruccion -> llamado .)
    OPUNA           reduce using rule 47 (instruccion -> llamado .)
    RETURN          reduce using rule 47 (instruccion -> llamado .)
    COMENT          reduce using rule 47 (instruccion -> llamado .)
    PRINT           reduce using rule 47 (instruccion -> llamado .)
    FIN             reduce using rule 47 (instruccion -> llamado .)
    IF              reduce using rule 47 (instruccion -> llamado .)
    ELSE            reduce using rule 47 (instruccion -> llamado .)
    $end            reduce using rule 47 (instruccion -> llamado .)


state 16

    (42) instruccion -> return .

    PROC            reduce using rule 42 (instruccion -> return .)
    VAR             reduce using rule 42 (instruccion -> return .)
    ID              reduce using rule 42 (instruccion -> return .)
    WHILE           reduce using rule 42 (instruccion -> return .)
    FOR             reduce using rule 42 (instruccion -> return .)
    OPUNA           reduce using rule 42 (instruccion -> return .)
    RETURN          reduce using rule 42 (instruccion -> return .)
    COMENT          reduce using rule 42 (instruccion -> return .)
    PRINT           reduce using rule 42 (instruccion -> return .)
    FIN             reduce using rule 42 (instruccion -> return .)
    IF              reduce using rule 42 (instruccion -> return .)
    ELSE            reduce using rule 42 (instruccion -> return .)
    $end            reduce using rule 42 (instruccion -> return .)


state 17

    (31) ciclofor -> FOR . ID IN ID

    ID              shift and go to state 43


state 18

    (40) instruccion -> ciclofor .

    PROC            reduce using rule 40 (instruccion -> ciclofor .)
    VAR             reduce using rule 40 (instruccion -> ciclofor .)
    ID              reduce using rule 40 (instruccion -> ciclofor .)
    WHILE           reduce using rule 40 (instruccion -> ciclofor .)
    FOR             reduce using rule 40 (instruccion -> ciclofor .)
    OPUNA           reduce using rule 40 (instruccion -> ciclofor .)
    RETURN          reduce using rule 40 (instruccion -> ciclofor .)
    COMENT          reduce using rule 40 (instruccion -> ciclofor .)
    PRINT           reduce using rule 40 (instruccion -> ciclofor .)
    FIN             reduce using rule 40 (instruccion -> ciclofor .)
    IF              reduce using rule 40 (instruccion -> ciclofor .)
    ELSE            reduce using rule 40 (instruccion -> ciclofor .)
    $end            reduce using rule 40 (instruccion -> ciclofor .)


state 19

    (27) condicionelse -> ELSE .

    PROC            reduce using rule 27 (condicionelse -> ELSE .)
    VAR             reduce using rule 27 (condicionelse -> ELSE .)
    ID              reduce using rule 27 (condicionelse -> ELSE .)
    WHILE           reduce using rule 27 (condicionelse -> ELSE .)
    FOR             reduce using rule 27 (condicionelse -> ELSE .)
    OPUNA           reduce using rule 27 (condicionelse -> ELSE .)
    RETURN          reduce using rule 27 (condicionelse -> ELSE .)
    COMENT          reduce using rule 27 (condicionelse -> ELSE .)
    PRINT           reduce using rule 27 (condicionelse -> ELSE .)
    FIN             reduce using rule 27 (condicionelse -> ELSE .)
    IF              reduce using rule 27 (condicionelse -> ELSE .)
    ELSE            reduce using rule 27 (condicionelse -> ELSE .)
    $end            reduce using rule 27 (condicionelse -> ELSE .)


state 20

    (23) asignacion -> VAR . ID ASIG opestring
    (33) preguntar -> VAR . ID ASIG ASK PARENA STRING PARENC

    ID              shift and go to state 44


state 21

    (5) fininstru -> FIN .

    PROC            reduce using rule 5 (fininstru -> FIN .)
    VAR             reduce using rule 5 (fininstru -> FIN .)
    ID              reduce using rule 5 (fininstru -> FIN .)
    WHILE           reduce using rule 5 (fininstru -> FIN .)
    FOR             reduce using rule 5 (fininstru -> FIN .)
    OPUNA           reduce using rule 5 (fininstru -> FIN .)
    RETURN          reduce using rule 5 (fininstru -> FIN .)
    COMENT          reduce using rule 5 (fininstru -> FIN .)
    PRINT           reduce using rule 5 (fininstru -> FIN .)
    FIN             reduce using rule 5 (fininstru -> FIN .)
    IF              reduce using rule 5 (fininstru -> FIN .)
    ELSE            reduce using rule 5 (fininstru -> FIN .)
    $end            reduce using rule 5 (fininstru -> FIN .)


state 22

    (24) asignacion -> ID . ASIG opestring
    (25) asignacion -> ID . ASIG ID PARENA parametros PARENC
    (34) preguntar -> ID . ASIG ASK PARENA STRING PARENC
    (35) llamado -> ID . PARENA parametros PARENC

    ASIG            shift and go to state 45
    PARENA          shift and go to state 46


state 23

    (26) condicionif -> IF . operacion
    (9) operacion -> . operacion1
    (10) operacion1 -> . operacion OPBIN operacion
    (11) operacion1 -> . PARENA operacion PARENC
    (12) operacion1 -> . inmediato
    (6) inmediato -> . NUM
    (7) inmediato -> . ID
    (8) inmediato -> . EXPBOOL

    PARENA          shift and go to state 37
    NUM             shift and go to state 35
    ID              shift and go to state 39
    EXPBOOL         shift and go to state 40

    operacion1                     shift and go to state 36
    inmediato                      shift and go to state 38
    operacion                      shift and go to state 47

state 24

    (41) instruccion -> opeunaria .

    PROC            reduce using rule 41 (instruccion -> opeunaria .)
    VAR             reduce using rule 41 (instruccion -> opeunaria .)
    ID              reduce using rule 41 (instruccion -> opeunaria .)
    WHILE           reduce using rule 41 (instruccion -> opeunaria .)
    FOR             reduce using rule 41 (instruccion -> opeunaria .)
    OPUNA           reduce using rule 41 (instruccion -> opeunaria .)
    RETURN          reduce using rule 41 (instruccion -> opeunaria .)
    COMENT          reduce using rule 41 (instruccion -> opeunaria .)
    PRINT           reduce using rule 41 (instruccion -> opeunaria .)
    FIN             reduce using rule 41 (instruccion -> opeunaria .)
    IF              reduce using rule 41 (instruccion -> opeunaria .)
    ELSE            reduce using rule 41 (instruccion -> opeunaria .)
    $end            reduce using rule 41 (instruccion -> opeunaria .)


state 25

    (37) instruccion -> asignacion .

    PROC            reduce using rule 37 (instruccion -> asignacion .)
    VAR             reduce using rule 37 (instruccion -> asignacion .)
    ID              reduce using rule 37 (instruccion -> asignacion .)
    WHILE           reduce using rule 37 (instruccion -> asignacion .)
    FOR             reduce using rule 37 (instruccion -> asignacion .)
    OPUNA           reduce using rule 37 (instruccion -> asignacion .)
    RETURN          reduce using rule 37 (instruccion -> asignacion .)
    COMENT          reduce using rule 37 (instruccion -> asignacion .)
    PRINT           reduce using rule 37 (instruccion -> asignacion .)
    FIN             reduce using rule 37 (instruccion -> asignacion .)
    IF              reduce using rule 37 (instruccion -> asignacion .)
    ELSE            reduce using rule 37 (instruccion -> asignacion .)
    $end            reduce using rule 37 (instruccion -> asignacion .)


state 26

    (0) S' -> root .



state 27

    (2) inicio -> instruccion . inicio
    (2) inicio -> . instruccion inicio
    (3) inicio -> . empty
    (36) instruccion -> . procedimiento
    (37) instruccion -> . asignacion
    (38) instruccion -> . condicion
    (39) instruccion -> . ciclowhile
    (40) instruccion -> . ciclofor
    (41) instruccion -> . opeunaria
    (42) instruccion -> . return
    (43) instruccion -> . comentario
    (44) instruccion -> . imprime
    (45) instruccion -> . preguntar
    (46) instruccion -> . fininstru
    (47) instruccion -> . llamado
    (4) empty -> .
    (22) procedimiento -> . PROC ID PARENA parametros PARENC
    (23) asignacion -> . VAR ID ASIG opestring
    (24) asignacion -> . ID ASIG opestring
    (25) asignacion -> . ID ASIG ID PARENA parametros PARENC
    (28) condicion -> . condicionif
    (29) condicion -> . condicionelse
    (30) ciclowhile -> . WHILE PARENA operacion PARENC ENTONCES
    (31) ciclofor -> . FOR ID IN ID
    (32) opeunaria -> . OPUNA ID
    (21) return -> . RETURN opestring
    (20) comentario -> . COMENT STRING
    (19) imprime -> . PRINT PARENA opestring PARENC
    (33) preguntar -> . VAR ID ASIG ASK PARENA STRING PARENC
    (34) preguntar -> . ID ASIG ASK PARENA STRING PARENC
    (5) fininstru -> . FIN
    (35) llamado -> . ID PARENA parametros PARENC
    (26) condicionif -> . IF operacion
    (27) condicionelse -> . ELSE

    $end            reduce using rule 4 (empty -> .)
    PROC            shift and go to state 30
    VAR             shift and go to state 20
    ID              shift and go to state 22
    WHILE           shift and go to state 28
    FOR             shift and go to state 17
    OPUNA           shift and go to state 10
    RETURN          shift and go to state 2
    COMENT          shift and go to state 1
    PRINT           shift and go to state 5
    FIN             shift and go to state 21
    IF              shift and go to state 23
    ELSE            shift and go to state 19

    opeunaria                      shift and go to state 24
    return                         shift and go to state 16
    asignacion                     shift and go to state 25
    preguntar                      shift and go to state 8
    instruccion                    shift and go to state 27
    ciclofor                       shift and go to state 18
    comentario                     shift and go to state 7
    condicion                      shift and go to state 11
    condicionelse                  shift and go to state 3
    procedimiento                  shift and go to state 4
    inicio                         shift and go to state 48
    condicionif                    shift and go to state 29
    imprime                        shift and go to state 6
    llamado                        shift and go to state 15
    ciclowhile                     shift and go to state 9
    empty                          shift and go to state 14
    fininstru                      shift and go to state 12

state 28

    (30) ciclowhile -> WHILE . PARENA operacion PARENC ENTONCES

    PARENA          shift and go to state 49


state 29

    (28) condicion -> condicionif .

    PROC            reduce using rule 28 (condicion -> condicionif .)
    VAR             reduce using rule 28 (condicion -> condicionif .)
    ID              reduce using rule 28 (condicion -> condicionif .)
    WHILE           reduce using rule 28 (condicion -> condicionif .)
    FOR             reduce using rule 28 (condicion -> condicionif .)
    OPUNA           reduce using rule 28 (condicion -> condicionif .)
    RETURN          reduce using rule 28 (condicion -> condicionif .)
    COMENT          reduce using rule 28 (condicion -> condicionif .)
    PRINT           reduce using rule 28 (condicion -> condicionif .)
    FIN             reduce using rule 28 (condicion -> condicionif .)
    IF              reduce using rule 28 (condicion -> condicionif .)
    ELSE            reduce using rule 28 (condicion -> condicionif .)
    $end            reduce using rule 28 (condicion -> condicionif .)


state 30

    (22) procedimiento -> PROC . ID PARENA parametros PARENC

    ID              shift and go to state 50


state 31

    (20) comentario -> COMENT STRING .

    PROC            reduce using rule 20 (comentario -> COMENT STRING .)
    VAR             reduce using rule 20 (comentario -> COMENT STRING .)
    ID              reduce using rule 20 (comentario -> COMENT STRING .)
    WHILE           reduce using rule 20 (comentario -> COMENT STRING .)
    FOR             reduce using rule 20 (comentario -> COMENT STRING .)
    OPUNA           reduce using rule 20 (comentario -> COMENT STRING .)
    RETURN          reduce using rule 20 (comentario -> COMENT STRING .)
    COMENT          reduce using rule 20 (comentario -> COMENT STRING .)
    PRINT           reduce using rule 20 (comentario -> COMENT STRING .)
    FIN             reduce using rule 20 (comentario -> COMENT STRING .)
    IF              reduce using rule 20 (comentario -> COMENT STRING .)
    ELSE            reduce using rule 20 (comentario -> COMENT STRING .)
    $end            reduce using rule 20 (comentario -> COMENT STRING .)


state 32

    (21) return -> RETURN opestring .

    PROC            reduce using rule 21 (return -> RETURN opestring .)
    VAR             reduce using rule 21 (return -> RETURN opestring .)
    ID              reduce using rule 21 (return -> RETURN opestring .)
    WHILE           reduce using rule 21 (return -> RETURN opestring .)
    FOR             reduce using rule 21 (return -> RETURN opestring .)
    OPUNA           reduce using rule 21 (return -> RETURN opestring .)
    RETURN          reduce using rule 21 (return -> RETURN opestring .)
    COMENT          reduce using rule 21 (return -> RETURN opestring .)
    PRINT           reduce using rule 21 (return -> RETURN opestring .)
    FIN             reduce using rule 21 (return -> RETURN opestring .)
    IF              reduce using rule 21 (return -> RETURN opestring .)
    ELSE            reduce using rule 21 (return -> RETURN opestring .)
    $end            reduce using rule 21 (return -> RETURN opestring .)


state 33

    (13) opestring -> STRING .

    PROC            reduce using rule 13 (opestring -> STRING .)
    VAR             reduce using rule 13 (opestring -> STRING .)
    ID              reduce using rule 13 (opestring -> STRING .)
    WHILE           reduce using rule 13 (opestring -> STRING .)
    FOR             reduce using rule 13 (opestring -> STRING .)
    OPUNA           reduce using rule 13 (opestring -> STRING .)
    RETURN          reduce using rule 13 (opestring -> STRING .)
    COMENT          reduce using rule 13 (opestring -> STRING .)
    PRINT           reduce using rule 13 (opestring -> STRING .)
    FIN             reduce using rule 13 (opestring -> STRING .)
    IF              reduce using rule 13 (opestring -> STRING .)
    ELSE            reduce using rule 13 (opestring -> STRING .)
    $end            reduce using rule 13 (opestring -> STRING .)
    PARENC          reduce using rule 13 (opestring -> STRING .)


state 34

    (14) opestring -> operacion .
    (10) operacion1 -> operacion . OPBIN operacion

    PROC            reduce using rule 14 (opestring -> operacion .)
    VAR             reduce using rule 14 (opestring -> operacion .)
    ID              reduce using rule 14 (opestring -> operacion .)
    WHILE           reduce using rule 14 (opestring -> operacion .)
    FOR             reduce using rule 14 (opestring -> operacion .)
    OPUNA           reduce using rule 14 (opestring -> operacion .)
    RETURN          reduce using rule 14 (opestring -> operacion .)
    COMENT          reduce using rule 14 (opestring -> operacion .)
    PRINT           reduce using rule 14 (opestring -> operacion .)
    FIN             reduce using rule 14 (opestring -> operacion .)
    IF              reduce using rule 14 (opestring -> operacion .)
    ELSE            reduce using rule 14 (opestring -> operacion .)
    $end            reduce using rule 14 (opestring -> operacion .)
    PARENC          reduce using rule 14 (opestring -> operacion .)
    OPBIN           shift and go to state 51


state 35

    (6) inmediato -> NUM .

    OPBIN           reduce using rule 6 (inmediato -> NUM .)
    PROC            reduce using rule 6 (inmediato -> NUM .)
    VAR             reduce using rule 6 (inmediato -> NUM .)
    ID              reduce using rule 6 (inmediato -> NUM .)
    WHILE           reduce using rule 6 (inmediato -> NUM .)
    FOR             reduce using rule 6 (inmediato -> NUM .)
    OPUNA           reduce using rule 6 (inmediato -> NUM .)
    RETURN          reduce using rule 6 (inmediato -> NUM .)
    COMENT          reduce using rule 6 (inmediato -> NUM .)
    PRINT           reduce using rule 6 (inmediato -> NUM .)
    FIN             reduce using rule 6 (inmediato -> NUM .)
    IF              reduce using rule 6 (inmediato -> NUM .)
    ELSE            reduce using rule 6 (inmediato -> NUM .)
    $end            reduce using rule 6 (inmediato -> NUM .)
    PARENC          reduce using rule 6 (inmediato -> NUM .)
    COMA            reduce using rule 6 (inmediato -> NUM .)


state 36

    (9) operacion -> operacion1 .

    OPBIN           reduce using rule 9 (operacion -> operacion1 .)
    PROC            reduce using rule 9 (operacion -> operacion1 .)
    VAR             reduce using rule 9 (operacion -> operacion1 .)
    ID              reduce using rule 9 (operacion -> operacion1 .)
    WHILE           reduce using rule 9 (operacion -> operacion1 .)
    FOR             reduce using rule 9 (operacion -> operacion1 .)
    OPUNA           reduce using rule 9 (operacion -> operacion1 .)
    RETURN          reduce using rule 9 (operacion -> operacion1 .)
    COMENT          reduce using rule 9 (operacion -> operacion1 .)
    PRINT           reduce using rule 9 (operacion -> operacion1 .)
    FIN             reduce using rule 9 (operacion -> operacion1 .)
    IF              reduce using rule 9 (operacion -> operacion1 .)
    ELSE            reduce using rule 9 (operacion -> operacion1 .)
    $end            reduce using rule 9 (operacion -> operacion1 .)
    PARENC          reduce using rule 9 (operacion -> operacion1 .)
    COMA            reduce using rule 9 (operacion -> operacion1 .)


state 37

    (11) operacion1 -> PARENA . operacion PARENC
    (9) operacion -> . operacion1
    (10) operacion1 -> . operacion OPBIN operacion
    (11) operacion1 -> . PARENA operacion PARENC
    (12) operacion1 -> . inmediato
    (6) inmediato -> . NUM
    (7) inmediato -> . ID
    (8) inmediato -> . EXPBOOL

    PARENA          shift and go to state 37
    NUM             shift and go to state 35
    ID              shift and go to state 39
    EXPBOOL         shift and go to state 40

    operacion1                     shift and go to state 36
    inmediato                      shift and go to state 38
    operacion                      shift and go to state 52

state 38

    (12) operacion1 -> inmediato .

    OPBIN           reduce using rule 12 (operacion1 -> inmediato .)
    PROC            reduce using rule 12 (operacion1 -> inmediato .)
    VAR             reduce using rule 12 (operacion1 -> inmediato .)
    ID              reduce using rule 12 (operacion1 -> inmediato .)
    WHILE           reduce using rule 12 (operacion1 -> inmediato .)
    FOR             reduce using rule 12 (operacion1 -> inmediato .)
    OPUNA           reduce using rule 12 (operacion1 -> inmediato .)
    RETURN          reduce using rule 12 (operacion1 -> inmediato .)
    COMENT          reduce using rule 12 (operacion1 -> inmediato .)
    PRINT           reduce using rule 12 (operacion1 -> inmediato .)
    FIN             reduce using rule 12 (operacion1 -> inmediato .)
    IF              reduce using rule 12 (operacion1 -> inmediato .)
    ELSE            reduce using rule 12 (operacion1 -> inmediato .)
    $end            reduce using rule 12 (operacion1 -> inmediato .)
    PARENC          reduce using rule 12 (operacion1 -> inmediato .)
    COMA            reduce using rule 12 (operacion1 -> inmediato .)


state 39

    (7) inmediato -> ID .

    OPBIN           reduce using rule 7 (inmediato -> ID .)
    PROC            reduce using rule 7 (inmediato -> ID .)
    VAR             reduce using rule 7 (inmediato -> ID .)
    ID              reduce using rule 7 (inmediato -> ID .)
    WHILE           reduce using rule 7 (inmediato -> ID .)
    FOR             reduce using rule 7 (inmediato -> ID .)
    OPUNA           reduce using rule 7 (inmediato -> ID .)
    RETURN          reduce using rule 7 (inmediato -> ID .)
    COMENT          reduce using rule 7 (inmediato -> ID .)
    PRINT           reduce using rule 7 (inmediato -> ID .)
    FIN             reduce using rule 7 (inmediato -> ID .)
    IF              reduce using rule 7 (inmediato -> ID .)
    ELSE            reduce using rule 7 (inmediato -> ID .)
    $end            reduce using rule 7 (inmediato -> ID .)
    PARENC          reduce using rule 7 (inmediato -> ID .)
    COMA            reduce using rule 7 (inmediato -> ID .)


state 40

    (8) inmediato -> EXPBOOL .

    OPBIN           reduce using rule 8 (inmediato -> EXPBOOL .)
    PROC            reduce using rule 8 (inmediato -> EXPBOOL .)
    VAR             reduce using rule 8 (inmediato -> EXPBOOL .)
    ID              reduce using rule 8 (inmediato -> EXPBOOL .)
    WHILE           reduce using rule 8 (inmediato -> EXPBOOL .)
    FOR             reduce using rule 8 (inmediato -> EXPBOOL .)
    OPUNA           reduce using rule 8 (inmediato -> EXPBOOL .)
    RETURN          reduce using rule 8 (inmediato -> EXPBOOL .)
    COMENT          reduce using rule 8 (inmediato -> EXPBOOL .)
    PRINT           reduce using rule 8 (inmediato -> EXPBOOL .)
    FIN             reduce using rule 8 (inmediato -> EXPBOOL .)
    IF              reduce using rule 8 (inmediato -> EXPBOOL .)
    ELSE            reduce using rule 8 (inmediato -> EXPBOOL .)
    $end            reduce using rule 8 (inmediato -> EXPBOOL .)
    PARENC          reduce using rule 8 (inmediato -> EXPBOOL .)
    COMA            reduce using rule 8 (inmediato -> EXPBOOL .)


state 41

    (19) imprime -> PRINT PARENA . opestring PARENC
    (13) opestring -> . STRING
    (14) opestring -> . operacion
    (9) operacion -> . operacion1
    (10) operacion1 -> . operacion OPBIN operacion
    (11) operacion1 -> . PARENA operacion PARENC
    (12) operacion1 -> . inmediato
    (6) inmediato -> . NUM
    (7) inmediato -> . ID
    (8) inmediato -> . EXPBOOL

    STRING          shift and go to state 33
    PARENA          shift and go to state 37
    NUM             shift and go to state 35
    ID              shift and go to state 39
    EXPBOOL         shift and go to state 40

    operacion1                     shift and go to state 36
    inmediato                      shift and go to state 38
    opestring                      shift and go to state 53
    operacion                      shift and go to state 34

state 42

    (32) opeunaria -> OPUNA ID .

    PROC            reduce using rule 32 (opeunaria -> OPUNA ID .)
    VAR             reduce using rule 32 (opeunaria -> OPUNA ID .)
    ID              reduce using rule 32 (opeunaria -> OPUNA ID .)
    WHILE           reduce using rule 32 (opeunaria -> OPUNA ID .)
    FOR             reduce using rule 32 (opeunaria -> OPUNA ID .)
    OPUNA           reduce using rule 32 (opeunaria -> OPUNA ID .)
    RETURN          reduce using rule 32 (opeunaria -> OPUNA ID .)
    COMENT          reduce using rule 32 (opeunaria -> OPUNA ID .)
    PRINT           reduce using rule 32 (opeunaria -> OPUNA ID .)
    FIN             reduce using rule 32 (opeunaria -> OPUNA ID .)
    IF              reduce using rule 32 (opeunaria -> OPUNA ID .)
    ELSE            reduce using rule 32 (opeunaria -> OPUNA ID .)
    $end            reduce using rule 32 (opeunaria -> OPUNA ID .)


state 43

    (31) ciclofor -> FOR ID . IN ID

    IN              shift and go to state 54


state 44

    (23) asignacion -> VAR ID . ASIG opestring
    (33) preguntar -> VAR ID . ASIG ASK PARENA STRING PARENC

    ASIG            shift and go to state 55


state 45

    (24) asignacion -> ID ASIG . opestring
    (25) asignacion -> ID ASIG . ID PARENA parametros PARENC
    (34) preguntar -> ID ASIG . ASK PARENA STRING PARENC
    (13) opestring -> . STRING
    (14) opestring -> . operacion
    (9) operacion -> . operacion1
    (10) operacion1 -> . operacion OPBIN operacion
    (11) operacion1 -> . PARENA operacion PARENC
    (12) operacion1 -> . inmediato
    (6) inmediato -> . NUM
    (7) inmediato -> . ID
    (8) inmediato -> . EXPBOOL

    ID              shift and go to state 58
    ASK             shift and go to state 57
    STRING          shift and go to state 33
    PARENA          shift and go to state 37
    NUM             shift and go to state 35
    EXPBOOL         shift and go to state 40

    inmediato                      shift and go to state 38
    operacion1                     shift and go to state 36
    opestring                      shift and go to state 56
    operacion                      shift and go to state 34

state 46

    (35) llamado -> ID PARENA . parametros PARENC
    (17) parametros -> . parametro
    (18) parametros -> . empty
    (15) parametro -> . operacion COMA parametro
    (16) parametro -> . operacion
    (4) empty -> .
    (9) operacion -> . operacion1
    (10) operacion1 -> . operacion OPBIN operacion
    (11) operacion1 -> . PARENA operacion PARENC
    (12) operacion1 -> . inmediato
    (6) inmediato -> . NUM
    (7) inmediato -> . ID
    (8) inmediato -> . EXPBOOL

    PARENC          reduce using rule 4 (empty -> .)
    PARENA          shift and go to state 37
    NUM             shift and go to state 35
    ID              shift and go to state 39
    EXPBOOL         shift and go to state 40

    operacion                      shift and go to state 59
    parametro                      shift and go to state 60
    inmediato                      shift and go to state 38
    operacion1                     shift and go to state 36
    parametros                     shift and go to state 61
    empty                          shift and go to state 62

state 47

    (26) condicionif -> IF operacion .
    (10) operacion1 -> operacion . OPBIN operacion

    PROC            reduce using rule 26 (condicionif -> IF operacion .)
    VAR             reduce using rule 26 (condicionif -> IF operacion .)
    ID              reduce using rule 26 (condicionif -> IF operacion .)
    WHILE           reduce using rule 26 (condicionif -> IF operacion .)
    FOR             reduce using rule 26 (condicionif -> IF operacion .)
    OPUNA           reduce using rule 26 (condicionif -> IF operacion .)
    RETURN          reduce using rule 26 (condicionif -> IF operacion .)
    COMENT          reduce using rule 26 (condicionif -> IF operacion .)
    PRINT           reduce using rule 26 (condicionif -> IF operacion .)
    FIN             reduce using rule 26 (condicionif -> IF operacion .)
    IF              reduce using rule 26 (condicionif -> IF operacion .)
    ELSE            reduce using rule 26 (condicionif -> IF operacion .)
    $end            reduce using rule 26 (condicionif -> IF operacion .)
    OPBIN           shift and go to state 51


state 48

    (2) inicio -> instruccion inicio .

    $end            reduce using rule 2 (inicio -> instruccion inicio .)


state 49

    (30) ciclowhile -> WHILE PARENA . operacion PARENC ENTONCES
    (9) operacion -> . operacion1
    (10) operacion1 -> . operacion OPBIN operacion
    (11) operacion1 -> . PARENA operacion PARENC
    (12) operacion1 -> . inmediato
    (6) inmediato -> . NUM
    (7) inmediato -> . ID
    (8) inmediato -> . EXPBOOL

    PARENA          shift and go to state 37
    NUM             shift and go to state 35
    ID              shift and go to state 39
    EXPBOOL         shift and go to state 40

    operacion1                     shift and go to state 36
    inmediato                      shift and go to state 38
    operacion                      shift and go to state 63

state 50

    (22) procedimiento -> PROC ID . PARENA parametros PARENC

    PARENA          shift and go to state 64


state 51

    (10) operacion1 -> operacion OPBIN . operacion
    (9) operacion -> . operacion1
    (10) operacion1 -> . operacion OPBIN operacion
    (11) operacion1 -> . PARENA operacion PARENC
    (12) operacion1 -> . inmediato
    (6) inmediato -> . NUM
    (7) inmediato -> . ID
    (8) inmediato -> . EXPBOOL

    PARENA          shift and go to state 37
    NUM             shift and go to state 35
    ID              shift and go to state 39
    EXPBOOL         shift and go to state 40

    operacion1                     shift and go to state 36
    inmediato                      shift and go to state 38
    operacion                      shift and go to state 65

state 52

    (11) operacion1 -> PARENA operacion . PARENC
    (10) operacion1 -> operacion . OPBIN operacion

    PARENC          shift and go to state 66
    OPBIN           shift and go to state 51


state 53

    (19) imprime -> PRINT PARENA opestring . PARENC

    PARENC          shift and go to state 67


state 54

    (31) ciclofor -> FOR ID IN . ID

    ID              shift and go to state 68


state 55

    (23) asignacion -> VAR ID ASIG . opestring
    (33) preguntar -> VAR ID ASIG . ASK PARENA STRING PARENC
    (13) opestring -> . STRING
    (14) opestring -> . operacion
    (9) operacion -> . operacion1
    (10) operacion1 -> . operacion OPBIN operacion
    (11) operacion1 -> . PARENA operacion PARENC
    (12) operacion1 -> . inmediato
    (6) inmediato -> . NUM
    (7) inmediato -> . ID
    (8) inmediato -> . EXPBOOL

    ASK             shift and go to state 70
    STRING          shift and go to state 33
    PARENA          shift and go to state 37
    NUM             shift and go to state 35
    ID              shift and go to state 39
    EXPBOOL         shift and go to state 40

    operacion1                     shift and go to state 36
    inmediato                      shift and go to state 38
    opestring                      shift and go to state 69
    operacion                      shift and go to state 34

state 56

    (24) asignacion -> ID ASIG opestring .

    PROC            reduce using rule 24 (asignacion -> ID ASIG opestring .)
    VAR             reduce using rule 24 (asignacion -> ID ASIG opestring .)
    ID              reduce using rule 24 (asignacion -> ID ASIG opestring .)
    WHILE           reduce using rule 24 (asignacion -> ID ASIG opestring .)
    FOR             reduce using rule 24 (asignacion -> ID ASIG opestring .)
    OPUNA           reduce using rule 24 (asignacion -> ID ASIG opestring .)
    RETURN          reduce using rule 24 (asignacion -> ID ASIG opestring .)
    COMENT          reduce using rule 24 (asignacion -> ID ASIG opestring .)
    PRINT           reduce using rule 24 (asignacion -> ID ASIG opestring .)
    FIN             reduce using rule 24 (asignacion -> ID ASIG opestring .)
    IF              reduce using rule 24 (asignacion -> ID ASIG opestring .)
    ELSE            reduce using rule 24 (asignacion -> ID ASIG opestring .)
    $end            reduce using rule 24 (asignacion -> ID ASIG opestring .)


state 57

    (34) preguntar -> ID ASIG ASK . PARENA STRING PARENC

    PARENA          shift and go to state 71


state 58

    (25) asignacion -> ID ASIG ID . PARENA parametros PARENC
    (7) inmediato -> ID .

    PARENA          shift and go to state 72
    OPBIN           reduce using rule 7 (inmediato -> ID .)
    PROC            reduce using rule 7 (inmediato -> ID .)
    VAR             reduce using rule 7 (inmediato -> ID .)
    ID              reduce using rule 7 (inmediato -> ID .)
    WHILE           reduce using rule 7 (inmediato -> ID .)
    FOR             reduce using rule 7 (inmediato -> ID .)
    OPUNA           reduce using rule 7 (inmediato -> ID .)
    RETURN          reduce using rule 7 (inmediato -> ID .)
    COMENT          reduce using rule 7 (inmediato -> ID .)
    PRINT           reduce using rule 7 (inmediato -> ID .)
    FIN             reduce using rule 7 (inmediato -> ID .)
    IF              reduce using rule 7 (inmediato -> ID .)
    ELSE            reduce using rule 7 (inmediato -> ID .)
    $end            reduce using rule 7 (inmediato -> ID .)


state 59

    (15) parametro -> operacion . COMA parametro
    (16) parametro -> operacion .
    (10) operacion1 -> operacion . OPBIN operacion

    COMA            shift and go to state 73
    PARENC          reduce using rule 16 (parametro -> operacion .)
    OPBIN           shift and go to state 51


state 60

    (17) parametros -> parametro .

    PARENC          reduce using rule 17 (parametros -> parametro .)


state 61

    (35) llamado -> ID PARENA parametros . PARENC

    PARENC          shift and go to state 74


state 62

    (18) parametros -> empty .

    PARENC          reduce using rule 18 (parametros -> empty .)


state 63

    (30) ciclowhile -> WHILE PARENA operacion . PARENC ENTONCES
    (10) operacion1 -> operacion . OPBIN operacion

    PARENC          shift and go to state 75
    OPBIN           shift and go to state 51


state 64

    (22) procedimiento -> PROC ID PARENA . parametros PARENC
    (17) parametros -> . parametro
    (18) parametros -> . empty
    (15) parametro -> . operacion COMA parametro
    (16) parametro -> . operacion
    (4) empty -> .
    (9) operacion -> . operacion1
    (10) operacion1 -> . operacion OPBIN operacion
    (11) operacion1 -> . PARENA operacion PARENC
    (12) operacion1 -> . inmediato
    (6) inmediato -> . NUM
    (7) inmediato -> . ID
    (8) inmediato -> . EXPBOOL

    PARENC          reduce using rule 4 (empty -> .)
    PARENA          shift and go to state 37
    NUM             shift and go to state 35
    ID              shift and go to state 39
    EXPBOOL         shift and go to state 40

    operacion                      shift and go to state 59
    parametro                      shift and go to state 60
    inmediato                      shift and go to state 38
    operacion1                     shift and go to state 36
    parametros                     shift and go to state 76
    empty                          shift and go to state 62

state 65

    (10) operacion1 -> operacion OPBIN operacion .
    (10) operacion1 -> operacion . OPBIN operacion

  ! shift/reduce conflict for OPBIN resolved as shift
    PROC            reduce using rule 10 (operacion1 -> operacion OPBIN operacion .)
    VAR             reduce using rule 10 (operacion1 -> operacion OPBIN operacion .)
    ID              reduce using rule 10 (operacion1 -> operacion OPBIN operacion .)
    WHILE           reduce using rule 10 (operacion1 -> operacion OPBIN operacion .)
    FOR             reduce using rule 10 (operacion1 -> operacion OPBIN operacion .)
    OPUNA           reduce using rule 10 (operacion1 -> operacion OPBIN operacion .)
    RETURN          reduce using rule 10 (operacion1 -> operacion OPBIN operacion .)
    COMENT          reduce using rule 10 (operacion1 -> operacion OPBIN operacion .)
    PRINT           reduce using rule 10 (operacion1 -> operacion OPBIN operacion .)
    FIN             reduce using rule 10 (operacion1 -> operacion OPBIN operacion .)
    IF              reduce using rule 10 (operacion1 -> operacion OPBIN operacion .)
    ELSE            reduce using rule 10 (operacion1 -> operacion OPBIN operacion .)
    $end            reduce using rule 10 (operacion1 -> operacion OPBIN operacion .)
    PARENC          reduce using rule 10 (operacion1 -> operacion OPBIN operacion .)
    COMA            reduce using rule 10 (operacion1 -> operacion OPBIN operacion .)
    OPBIN           shift and go to state 51

  ! OPBIN           [ reduce using rule 10 (operacion1 -> operacion OPBIN operacion .) ]


state 66

    (11) operacion1 -> PARENA operacion PARENC .

    OPBIN           reduce using rule 11 (operacion1 -> PARENA operacion PARENC .)
    PROC            reduce using rule 11 (operacion1 -> PARENA operacion PARENC .)
    VAR             reduce using rule 11 (operacion1 -> PARENA operacion PARENC .)
    ID              reduce using rule 11 (operacion1 -> PARENA operacion PARENC .)
    WHILE           reduce using rule 11 (operacion1 -> PARENA operacion PARENC .)
    FOR             reduce using rule 11 (operacion1 -> PARENA operacion PARENC .)
    OPUNA           reduce using rule 11 (operacion1 -> PARENA operacion PARENC .)
    RETURN          reduce using rule 11 (operacion1 -> PARENA operacion PARENC .)
    COMENT          reduce using rule 11 (operacion1 -> PARENA operacion PARENC .)
    PRINT           reduce using rule 11 (operacion1 -> PARENA operacion PARENC .)
    FIN             reduce using rule 11 (operacion1 -> PARENA operacion PARENC .)
    IF              reduce using rule 11 (operacion1 -> PARENA operacion PARENC .)
    ELSE            reduce using rule 11 (operacion1 -> PARENA operacion PARENC .)
    $end            reduce using rule 11 (operacion1 -> PARENA operacion PARENC .)
    PARENC          reduce using rule 11 (operacion1 -> PARENA operacion PARENC .)
    COMA            reduce using rule 11 (operacion1 -> PARENA operacion PARENC .)


state 67

    (19) imprime -> PRINT PARENA opestring PARENC .

    PROC            reduce using rule 19 (imprime -> PRINT PARENA opestring PARENC .)
    VAR             reduce using rule 19 (imprime -> PRINT PARENA opestring PARENC .)
    ID              reduce using rule 19 (imprime -> PRINT PARENA opestring PARENC .)
    WHILE           reduce using rule 19 (imprime -> PRINT PARENA opestring PARENC .)
    FOR             reduce using rule 19 (imprime -> PRINT PARENA opestring PARENC .)
    OPUNA           reduce using rule 19 (imprime -> PRINT PARENA opestring PARENC .)
    RETURN          reduce using rule 19 (imprime -> PRINT PARENA opestring PARENC .)
    COMENT          reduce using rule 19 (imprime -> PRINT PARENA opestring PARENC .)
    PRINT           reduce using rule 19 (imprime -> PRINT PARENA opestring PARENC .)
    FIN             reduce using rule 19 (imprime -> PRINT PARENA opestring PARENC .)
    IF              reduce using rule 19 (imprime -> PRINT PARENA opestring PARENC .)
    ELSE            reduce using rule 19 (imprime -> PRINT PARENA opestring PARENC .)
    $end            reduce using rule 19 (imprime -> PRINT PARENA opestring PARENC .)


state 68

    (31) ciclofor -> FOR ID IN ID .

    PROC            reduce using rule 31 (ciclofor -> FOR ID IN ID .)
    VAR             reduce using rule 31 (ciclofor -> FOR ID IN ID .)
    ID              reduce using rule 31 (ciclofor -> FOR ID IN ID .)
    WHILE           reduce using rule 31 (ciclofor -> FOR ID IN ID .)
    FOR             reduce using rule 31 (ciclofor -> FOR ID IN ID .)
    OPUNA           reduce using rule 31 (ciclofor -> FOR ID IN ID .)
    RETURN          reduce using rule 31 (ciclofor -> FOR ID IN ID .)
    COMENT          reduce using rule 31 (ciclofor -> FOR ID IN ID .)
    PRINT           reduce using rule 31 (ciclofor -> FOR ID IN ID .)
    FIN             reduce using rule 31 (ciclofor -> FOR ID IN ID .)
    IF              reduce using rule 31 (ciclofor -> FOR ID IN ID .)
    ELSE            reduce using rule 31 (ciclofor -> FOR ID IN ID .)
    $end            reduce using rule 31 (ciclofor -> FOR ID IN ID .)


state 69

    (23) asignacion -> VAR ID ASIG opestring .

    PROC            reduce using rule 23 (asignacion -> VAR ID ASIG opestring .)
    VAR             reduce using rule 23 (asignacion -> VAR ID ASIG opestring .)
    ID              reduce using rule 23 (asignacion -> VAR ID ASIG opestring .)
    WHILE           reduce using rule 23 (asignacion -> VAR ID ASIG opestring .)
    FOR             reduce using rule 23 (asignacion -> VAR ID ASIG opestring .)
    OPUNA           reduce using rule 23 (asignacion -> VAR ID ASIG opestring .)
    RETURN          reduce using rule 23 (asignacion -> VAR ID ASIG opestring .)
    COMENT          reduce using rule 23 (asignacion -> VAR ID ASIG opestring .)
    PRINT           reduce using rule 23 (asignacion -> VAR ID ASIG opestring .)
    FIN             reduce using rule 23 (asignacion -> VAR ID ASIG opestring .)
    IF              reduce using rule 23 (asignacion -> VAR ID ASIG opestring .)
    ELSE            reduce using rule 23 (asignacion -> VAR ID ASIG opestring .)
    $end            reduce using rule 23 (asignacion -> VAR ID ASIG opestring .)


state 70

    (33) preguntar -> VAR ID ASIG ASK . PARENA STRING PARENC

    PARENA          shift and go to state 77


state 71

    (34) preguntar -> ID ASIG ASK PARENA . STRING PARENC

    STRING          shift and go to state 78


state 72

    (25) asignacion -> ID ASIG ID PARENA . parametros PARENC
    (17) parametros -> . parametro
    (18) parametros -> . empty
    (15) parametro -> . operacion COMA parametro
    (16) parametro -> . operacion
    (4) empty -> .
    (9) operacion -> . operacion1
    (10) operacion1 -> . operacion OPBIN operacion
    (11) operacion1 -> . PARENA operacion PARENC
    (12) operacion1 -> . inmediato
    (6) inmediato -> . NUM
    (7) inmediato -> . ID
    (8) inmediato -> . EXPBOOL

    PARENC          reduce using rule 4 (empty -> .)
    PARENA          shift and go to state 37
    NUM             shift and go to state 35
    ID              shift and go to state 39
    EXPBOOL         shift and go to state 40

    operacion                      shift and go to state 59
    parametro                      shift and go to state 60
    inmediato                      shift and go to state 38
    operacion1                     shift and go to state 36
    parametros                     shift and go to state 79
    empty                          shift and go to state 62

state 73

    (15) parametro -> operacion COMA . parametro
    (15) parametro -> . operacion COMA parametro
    (16) parametro -> . operacion
    (9) operacion -> . operacion1
    (10) operacion1 -> . operacion OPBIN operacion
    (11) operacion1 -> . PARENA operacion PARENC
    (12) operacion1 -> . inmediato
    (6) inmediato -> . NUM
    (7) inmediato -> . ID
    (8) inmediato -> . EXPBOOL

    PARENA          shift and go to state 37
    NUM             shift and go to state 35
    ID              shift and go to state 39
    EXPBOOL         shift and go to state 40

    parametro                      shift and go to state 80
    operacion1                     shift and go to state 36
    inmediato                      shift and go to state 38
    operacion                      shift and go to state 59

state 74

    (35) llamado -> ID PARENA parametros PARENC .

    PROC            reduce using rule 35 (llamado -> ID PARENA parametros PARENC .)
    VAR             reduce using rule 35 (llamado -> ID PARENA parametros PARENC .)
    ID              reduce using rule 35 (llamado -> ID PARENA parametros PARENC .)
    WHILE           reduce using rule 35 (llamado -> ID PARENA parametros PARENC .)
    FOR             reduce using rule 35 (llamado -> ID PARENA parametros PARENC .)
    OPUNA           reduce using rule 35 (llamado -> ID PARENA parametros PARENC .)
    RETURN          reduce using rule 35 (llamado -> ID PARENA parametros PARENC .)
    COMENT          reduce using rule 35 (llamado -> ID PARENA parametros PARENC .)
    PRINT           reduce using rule 35 (llamado -> ID PARENA parametros PARENC .)
    FIN             reduce using rule 35 (llamado -> ID PARENA parametros PARENC .)
    IF              reduce using rule 35 (llamado -> ID PARENA parametros PARENC .)
    ELSE            reduce using rule 35 (llamado -> ID PARENA parametros PARENC .)
    $end            reduce using rule 35 (llamado -> ID PARENA parametros PARENC .)


state 75

    (30) ciclowhile -> WHILE PARENA operacion PARENC . ENTONCES

    ENTONCES        shift and go to state 81


state 76

    (22) procedimiento -> PROC ID PARENA parametros . PARENC

    PARENC          shift and go to state 82


state 77

    (33) preguntar -> VAR ID ASIG ASK PARENA . STRING PARENC

    STRING          shift and go to state 83


state 78

    (34) preguntar -> ID ASIG ASK PARENA STRING . PARENC

    PARENC          shift and go to state 84


state 79

    (25) asignacion -> ID ASIG ID PARENA parametros . PARENC

    PARENC          shift and go to state 85


state 80

    (15) parametro -> operacion COMA parametro .

    PARENC          reduce using rule 15 (parametro -> operacion COMA parametro .)


state 81

    (30) ciclowhile -> WHILE PARENA operacion PARENC ENTONCES .

    PROC            reduce using rule 30 (ciclowhile -> WHILE PARENA operacion PARENC ENTONCES .)
    VAR             reduce using rule 30 (ciclowhile -> WHILE PARENA operacion PARENC ENTONCES .)
    ID              reduce using rule 30 (ciclowhile -> WHILE PARENA operacion PARENC ENTONCES .)
    WHILE           reduce using rule 30 (ciclowhile -> WHILE PARENA operacion PARENC ENTONCES .)
    FOR             reduce using rule 30 (ciclowhile -> WHILE PARENA operacion PARENC ENTONCES .)
    OPUNA           reduce using rule 30 (ciclowhile -> WHILE PARENA operacion PARENC ENTONCES .)
    RETURN          reduce using rule 30 (ciclowhile -> WHILE PARENA operacion PARENC ENTONCES .)
    COMENT          reduce using rule 30 (ciclowhile -> WHILE PARENA operacion PARENC ENTONCES .)
    PRINT           reduce using rule 30 (ciclowhile -> WHILE PARENA operacion PARENC ENTONCES .)
    FIN             reduce using rule 30 (ciclowhile -> WHILE PARENA operacion PARENC ENTONCES .)
    IF              reduce using rule 30 (ciclowhile -> WHILE PARENA operacion PARENC ENTONCES .)
    ELSE            reduce using rule 30 (ciclowhile -> WHILE PARENA operacion PARENC ENTONCES .)
    $end            reduce using rule 30 (ciclowhile -> WHILE PARENA operacion PARENC ENTONCES .)


state 82

    (22) procedimiento -> PROC ID PARENA parametros PARENC .

    PROC            reduce using rule 22 (procedimiento -> PROC ID PARENA parametros PARENC .)
    VAR             reduce using rule 22 (procedimiento -> PROC ID PARENA parametros PARENC .)
    ID              reduce using rule 22 (procedimiento -> PROC ID PARENA parametros PARENC .)
    WHILE           reduce using rule 22 (procedimiento -> PROC ID PARENA parametros PARENC .)
    FOR             reduce using rule 22 (procedimiento -> PROC ID PARENA parametros PARENC .)
    OPUNA           reduce using rule 22 (procedimiento -> PROC ID PARENA parametros PARENC .)
    RETURN          reduce using rule 22 (procedimiento -> PROC ID PARENA parametros PARENC .)
    COMENT          reduce using rule 22 (procedimiento -> PROC ID PARENA parametros PARENC .)
    PRINT           reduce using rule 22 (procedimiento -> PROC ID PARENA parametros PARENC .)
    FIN             reduce using rule 22 (procedimiento -> PROC ID PARENA parametros PARENC .)
    IF              reduce using rule 22 (procedimiento -> PROC ID PARENA parametros PARENC .)
    ELSE            reduce using rule 22 (procedimiento -> PROC ID PARENA parametros PARENC .)
    $end            reduce using rule 22 (procedimiento -> PROC ID PARENA parametros PARENC .)


state 83

    (33) preguntar -> VAR ID ASIG ASK PARENA STRING . PARENC

    PARENC          shift and go to state 86


state 84

    (34) preguntar -> ID ASIG ASK PARENA STRING PARENC .

    PROC            reduce using rule 34 (preguntar -> ID ASIG ASK PARENA STRING PARENC .)
    VAR             reduce using rule 34 (preguntar -> ID ASIG ASK PARENA STRING PARENC .)
    ID              reduce using rule 34 (preguntar -> ID ASIG ASK PARENA STRING PARENC .)
    WHILE           reduce using rule 34 (preguntar -> ID ASIG ASK PARENA STRING PARENC .)
    FOR             reduce using rule 34 (preguntar -> ID ASIG ASK PARENA STRING PARENC .)
    OPUNA           reduce using rule 34 (preguntar -> ID ASIG ASK PARENA STRING PARENC .)
    RETURN          reduce using rule 34 (preguntar -> ID ASIG ASK PARENA STRING PARENC .)
    COMENT          reduce using rule 34 (preguntar -> ID ASIG ASK PARENA STRING PARENC .)
    PRINT           reduce using rule 34 (preguntar -> ID ASIG ASK PARENA STRING PARENC .)
    FIN             reduce using rule 34 (preguntar -> ID ASIG ASK PARENA STRING PARENC .)
    IF              reduce using rule 34 (preguntar -> ID ASIG ASK PARENA STRING PARENC .)
    ELSE            reduce using rule 34 (preguntar -> ID ASIG ASK PARENA STRING PARENC .)
    $end            reduce using rule 34 (preguntar -> ID ASIG ASK PARENA STRING PARENC .)


state 85

    (25) asignacion -> ID ASIG ID PARENA parametros PARENC .

    PROC            reduce using rule 25 (asignacion -> ID ASIG ID PARENA parametros PARENC .)
    VAR             reduce using rule 25 (asignacion -> ID ASIG ID PARENA parametros PARENC .)
    ID              reduce using rule 25 (asignacion -> ID ASIG ID PARENA parametros PARENC .)
    WHILE           reduce using rule 25 (asignacion -> ID ASIG ID PARENA parametros PARENC .)
    FOR             reduce using rule 25 (asignacion -> ID ASIG ID PARENA parametros PARENC .)
    OPUNA           reduce using rule 25 (asignacion -> ID ASIG ID PARENA parametros PARENC .)
    RETURN          reduce using rule 25 (asignacion -> ID ASIG ID PARENA parametros PARENC .)
    COMENT          reduce using rule 25 (asignacion -> ID ASIG ID PARENA parametros PARENC .)
    PRINT           reduce using rule 25 (asignacion -> ID ASIG ID PARENA parametros PARENC .)
    FIN             reduce using rule 25 (asignacion -> ID ASIG ID PARENA parametros PARENC .)
    IF              reduce using rule 25 (asignacion -> ID ASIG ID PARENA parametros PARENC .)
    ELSE            reduce using rule 25 (asignacion -> ID ASIG ID PARENA parametros PARENC .)
    $end            reduce using rule 25 (asignacion -> ID ASIG ID PARENA parametros PARENC .)


state 86

    (33) preguntar -> VAR ID ASIG ASK PARENA STRING PARENC .

    PROC            reduce using rule 33 (preguntar -> VAR ID ASIG ASK PARENA STRING PARENC .)
    VAR             reduce using rule 33 (preguntar -> VAR ID ASIG ASK PARENA STRING PARENC .)
    ID              reduce using rule 33 (preguntar -> VAR ID ASIG ASK PARENA STRING PARENC .)
    WHILE           reduce using rule 33 (preguntar -> VAR ID ASIG ASK PARENA STRING PARENC .)
    FOR             reduce using rule 33 (preguntar -> VAR ID ASIG ASK PARENA STRING PARENC .)
    OPUNA           reduce using rule 33 (preguntar -> VAR ID ASIG ASK PARENA STRING PARENC .)
    RETURN          reduce using rule 33 (preguntar -> VAR ID ASIG ASK PARENA STRING PARENC .)
    COMENT          reduce using rule 33 (preguntar -> VAR ID ASIG ASK PARENA STRING PARENC .)
    PRINT           reduce using rule 33 (preguntar -> VAR ID ASIG ASK PARENA STRING PARENC .)
    FIN             reduce using rule 33 (preguntar -> VAR ID ASIG ASK PARENA STRING PARENC .)
    IF              reduce using rule 33 (preguntar -> VAR ID ASIG ASK PARENA STRING PARENC .)
    ELSE            reduce using rule 33 (preguntar -> VAR ID ASIG ASK PARENA STRING PARENC .)
    $end            reduce using rule 33 (preguntar -> VAR ID ASIG ASK PARENA STRING PARENC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OPBIN in state 65 resolved as shift
